//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: grpc/tradeapi/v1/stops.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Grpc_Tradeapi_V1_StopsClient`, then call methods of this protocol to make API calls.
internal protocol Grpc_Tradeapi_V1_StopsClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Grpc_Tradeapi_V1_StopsClientInterceptorFactoryProtocol? { get }

  func getStops(
    _ request: Proto_Tradeapi_V1_GetStopsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_Tradeapi_V1_GetStopsRequest, Proto_Tradeapi_V1_GetStopsResult>

  func cancelStop(
    _ request: Proto_Tradeapi_V1_CancelStopRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_Tradeapi_V1_CancelStopRequest, Proto_Tradeapi_V1_CancelStopResult>

  func newStop(
    _ request: Proto_Tradeapi_V1_NewStopRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Proto_Tradeapi_V1_NewStopRequest, Proto_Tradeapi_V1_NewStopResult>
}

extension Grpc_Tradeapi_V1_StopsClientProtocol {
  internal var serviceName: String {
    return "grpc.tradeapi.v1.Stops"
  }

  /// Returns the list of Stop Orders.
  /// Возвращает список стоп-заявок.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetStops.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getStops(
    _ request: Proto_Tradeapi_V1_GetStopsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_Tradeapi_V1_GetStopsRequest, Proto_Tradeapi_V1_GetStopsResult> {
    return self.makeUnaryCall(
      path: Grpc_Tradeapi_V1_StopsClientMetadata.Methods.getStops.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetStopsInterceptors() ?? []
    )
  }

  /// Cancels Stop Order.
  /// Снимает стоп-заявку.
  ///
  /// - Parameters:
  ///   - request: Request to send to CancelStop.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func cancelStop(
    _ request: Proto_Tradeapi_V1_CancelStopRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_Tradeapi_V1_CancelStopRequest, Proto_Tradeapi_V1_CancelStopResult> {
    return self.makeUnaryCall(
      path: Grpc_Tradeapi_V1_StopsClientMetadata.Methods.cancelStop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelStopInterceptors() ?? []
    )
  }

  /// Creates new Stop Order.
  /// Выставляет стоп-заявку.
  ///
  /// - Parameters:
  ///   - request: Request to send to NewStop.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func newStop(
    _ request: Proto_Tradeapi_V1_NewStopRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Proto_Tradeapi_V1_NewStopRequest, Proto_Tradeapi_V1_NewStopResult> {
    return self.makeUnaryCall(
      path: Grpc_Tradeapi_V1_StopsClientMetadata.Methods.newStop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeNewStopInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Grpc_Tradeapi_V1_StopsClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Grpc_Tradeapi_V1_StopsNIOClient")
internal final class Grpc_Tradeapi_V1_StopsClient: Grpc_Tradeapi_V1_StopsClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Grpc_Tradeapi_V1_StopsClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: Grpc_Tradeapi_V1_StopsClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the grpc.tradeapi.v1.Stops service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Grpc_Tradeapi_V1_StopsClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct Grpc_Tradeapi_V1_StopsNIOClient: Grpc_Tradeapi_V1_StopsClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Grpc_Tradeapi_V1_StopsClientInterceptorFactoryProtocol?

  /// Creates a client for the grpc.tradeapi.v1.Stops service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Grpc_Tradeapi_V1_StopsClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Grpc_Tradeapi_V1_StopsAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Grpc_Tradeapi_V1_StopsClientInterceptorFactoryProtocol? { get }

  func makeGetStopsCall(
    _ request: Proto_Tradeapi_V1_GetStopsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_Tradeapi_V1_GetStopsRequest, Proto_Tradeapi_V1_GetStopsResult>

  func makeCancelStopCall(
    _ request: Proto_Tradeapi_V1_CancelStopRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_Tradeapi_V1_CancelStopRequest, Proto_Tradeapi_V1_CancelStopResult>

  func makeNewStopCall(
    _ request: Proto_Tradeapi_V1_NewStopRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Proto_Tradeapi_V1_NewStopRequest, Proto_Tradeapi_V1_NewStopResult>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Grpc_Tradeapi_V1_StopsAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Grpc_Tradeapi_V1_StopsClientMetadata.serviceDescriptor
  }

  internal var interceptors: Grpc_Tradeapi_V1_StopsClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeGetStopsCall(
    _ request: Proto_Tradeapi_V1_GetStopsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_Tradeapi_V1_GetStopsRequest, Proto_Tradeapi_V1_GetStopsResult> {
    return self.makeAsyncUnaryCall(
      path: Grpc_Tradeapi_V1_StopsClientMetadata.Methods.getStops.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetStopsInterceptors() ?? []
    )
  }

  internal func makeCancelStopCall(
    _ request: Proto_Tradeapi_V1_CancelStopRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_Tradeapi_V1_CancelStopRequest, Proto_Tradeapi_V1_CancelStopResult> {
    return self.makeAsyncUnaryCall(
      path: Grpc_Tradeapi_V1_StopsClientMetadata.Methods.cancelStop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelStopInterceptors() ?? []
    )
  }

  internal func makeNewStopCall(
    _ request: Proto_Tradeapi_V1_NewStopRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Proto_Tradeapi_V1_NewStopRequest, Proto_Tradeapi_V1_NewStopResult> {
    return self.makeAsyncUnaryCall(
      path: Grpc_Tradeapi_V1_StopsClientMetadata.Methods.newStop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeNewStopInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Grpc_Tradeapi_V1_StopsAsyncClientProtocol {
  internal func getStops(
    _ request: Proto_Tradeapi_V1_GetStopsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_Tradeapi_V1_GetStopsResult {
    return try await self.performAsyncUnaryCall(
      path: Grpc_Tradeapi_V1_StopsClientMetadata.Methods.getStops.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetStopsInterceptors() ?? []
    )
  }

  internal func cancelStop(
    _ request: Proto_Tradeapi_V1_CancelStopRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_Tradeapi_V1_CancelStopResult {
    return try await self.performAsyncUnaryCall(
      path: Grpc_Tradeapi_V1_StopsClientMetadata.Methods.cancelStop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCancelStopInterceptors() ?? []
    )
  }

  internal func newStop(
    _ request: Proto_Tradeapi_V1_NewStopRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Proto_Tradeapi_V1_NewStopResult {
    return try await self.performAsyncUnaryCall(
      path: Grpc_Tradeapi_V1_StopsClientMetadata.Methods.newStop.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeNewStopInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct Grpc_Tradeapi_V1_StopsAsyncClient: Grpc_Tradeapi_V1_StopsAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: Grpc_Tradeapi_V1_StopsClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Grpc_Tradeapi_V1_StopsClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

internal protocol Grpc_Tradeapi_V1_StopsClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getStops'.
  func makeGetStopsInterceptors() -> [ClientInterceptor<Proto_Tradeapi_V1_GetStopsRequest, Proto_Tradeapi_V1_GetStopsResult>]

  /// - Returns: Interceptors to use when invoking 'cancelStop'.
  func makeCancelStopInterceptors() -> [ClientInterceptor<Proto_Tradeapi_V1_CancelStopRequest, Proto_Tradeapi_V1_CancelStopResult>]

  /// - Returns: Interceptors to use when invoking 'newStop'.
  func makeNewStopInterceptors() -> [ClientInterceptor<Proto_Tradeapi_V1_NewStopRequest, Proto_Tradeapi_V1_NewStopResult>]
}

internal enum Grpc_Tradeapi_V1_StopsClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Stops",
    fullName: "grpc.tradeapi.v1.Stops",
    methods: [
      Grpc_Tradeapi_V1_StopsClientMetadata.Methods.getStops,
      Grpc_Tradeapi_V1_StopsClientMetadata.Methods.cancelStop,
      Grpc_Tradeapi_V1_StopsClientMetadata.Methods.newStop,
    ]
  )

  internal enum Methods {
    internal static let getStops = GRPCMethodDescriptor(
      name: "GetStops",
      path: "/grpc.tradeapi.v1.Stops/GetStops",
      type: GRPCCallType.unary
    )

    internal static let cancelStop = GRPCMethodDescriptor(
      name: "CancelStop",
      path: "/grpc.tradeapi.v1.Stops/CancelStop",
      type: GRPCCallType.unary
    )

    internal static let newStop = GRPCMethodDescriptor(
      name: "NewStop",
      path: "/grpc.tradeapi.v1.Stops/NewStop",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol Grpc_Tradeapi_V1_StopsProvider: CallHandlerProvider {
  var interceptors: Grpc_Tradeapi_V1_StopsServerInterceptorFactoryProtocol? { get }

  /// Returns the list of Stop Orders.
  /// Возвращает список стоп-заявок.
  func getStops(request: Proto_Tradeapi_V1_GetStopsRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_Tradeapi_V1_GetStopsResult>

  /// Cancels Stop Order.
  /// Снимает стоп-заявку.
  func cancelStop(request: Proto_Tradeapi_V1_CancelStopRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_Tradeapi_V1_CancelStopResult>

  /// Creates new Stop Order.
  /// Выставляет стоп-заявку.
  func newStop(request: Proto_Tradeapi_V1_NewStopRequest, context: StatusOnlyCallContext) -> EventLoopFuture<Proto_Tradeapi_V1_NewStopResult>
}

extension Grpc_Tradeapi_V1_StopsProvider {
  internal var serviceName: Substring {
    return Grpc_Tradeapi_V1_StopsServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "GetStops":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_Tradeapi_V1_GetStopsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Tradeapi_V1_GetStopsResult>(),
        interceptors: self.interceptors?.makeGetStopsInterceptors() ?? [],
        userFunction: self.getStops(request:context:)
      )

    case "CancelStop":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_Tradeapi_V1_CancelStopRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Tradeapi_V1_CancelStopResult>(),
        interceptors: self.interceptors?.makeCancelStopInterceptors() ?? [],
        userFunction: self.cancelStop(request:context:)
      )

    case "NewStop":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_Tradeapi_V1_NewStopRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Tradeapi_V1_NewStopResult>(),
        interceptors: self.interceptors?.makeNewStopInterceptors() ?? [],
        userFunction: self.newStop(request:context:)
      )

    default:
      return nil
    }
  }
}

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol Grpc_Tradeapi_V1_StopsAsyncProvider: CallHandlerProvider, Sendable {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Grpc_Tradeapi_V1_StopsServerInterceptorFactoryProtocol? { get }

  /// Returns the list of Stop Orders.
  /// Возвращает список стоп-заявок.
  func getStops(
    request: Proto_Tradeapi_V1_GetStopsRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_Tradeapi_V1_GetStopsResult

  /// Cancels Stop Order.
  /// Снимает стоп-заявку.
  func cancelStop(
    request: Proto_Tradeapi_V1_CancelStopRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_Tradeapi_V1_CancelStopResult

  /// Creates new Stop Order.
  /// Выставляет стоп-заявку.
  func newStop(
    request: Proto_Tradeapi_V1_NewStopRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> Proto_Tradeapi_V1_NewStopResult
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Grpc_Tradeapi_V1_StopsAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return Grpc_Tradeapi_V1_StopsServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return Grpc_Tradeapi_V1_StopsServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: Grpc_Tradeapi_V1_StopsServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "GetStops":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_Tradeapi_V1_GetStopsRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Tradeapi_V1_GetStopsResult>(),
        interceptors: self.interceptors?.makeGetStopsInterceptors() ?? [],
        wrapping: { try await self.getStops(request: $0, context: $1) }
      )

    case "CancelStop":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_Tradeapi_V1_CancelStopRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Tradeapi_V1_CancelStopResult>(),
        interceptors: self.interceptors?.makeCancelStopInterceptors() ?? [],
        wrapping: { try await self.cancelStop(request: $0, context: $1) }
      )

    case "NewStop":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<Proto_Tradeapi_V1_NewStopRequest>(),
        responseSerializer: ProtobufSerializer<Proto_Tradeapi_V1_NewStopResult>(),
        interceptors: self.interceptors?.makeNewStopInterceptors() ?? [],
        wrapping: { try await self.newStop(request: $0, context: $1) }
      )

    default:
      return nil
    }
  }
}

internal protocol Grpc_Tradeapi_V1_StopsServerInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when handling 'getStops'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetStopsInterceptors() -> [ServerInterceptor<Proto_Tradeapi_V1_GetStopsRequest, Proto_Tradeapi_V1_GetStopsResult>]

  /// - Returns: Interceptors to use when handling 'cancelStop'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeCancelStopInterceptors() -> [ServerInterceptor<Proto_Tradeapi_V1_CancelStopRequest, Proto_Tradeapi_V1_CancelStopResult>]

  /// - Returns: Interceptors to use when handling 'newStop'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeNewStopInterceptors() -> [ServerInterceptor<Proto_Tradeapi_V1_NewStopRequest, Proto_Tradeapi_V1_NewStopResult>]
}

internal enum Grpc_Tradeapi_V1_StopsServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Stops",
    fullName: "grpc.tradeapi.v1.Stops",
    methods: [
      Grpc_Tradeapi_V1_StopsServerMetadata.Methods.getStops,
      Grpc_Tradeapi_V1_StopsServerMetadata.Methods.cancelStop,
      Grpc_Tradeapi_V1_StopsServerMetadata.Methods.newStop,
    ]
  )

  internal enum Methods {
    internal static let getStops = GRPCMethodDescriptor(
      name: "GetStops",
      path: "/grpc.tradeapi.v1.Stops/GetStops",
      type: GRPCCallType.unary
    )

    internal static let cancelStop = GRPCMethodDescriptor(
      name: "CancelStop",
      path: "/grpc.tradeapi.v1.Stops/CancelStop",
      type: GRPCCallType.unary
    )

    internal static let newStop = GRPCMethodDescriptor(
      name: "NewStop",
      path: "/grpc.tradeapi.v1.Stops/NewStop",
      type: GRPCCallType.unary
    )
  }
}
